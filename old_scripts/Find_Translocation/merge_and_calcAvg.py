#this file is to merge scaffold depth data generated by "scan_samtools_depth_v2" in combination with
# "divide_fee_depthScanScript.sh" and to calculate average depth for each scaffold

import progressbar
import argparse
import os
import numpy as np
import pandas as pd


parser = argparse.ArgumentParser(description='')
parser.add_argument('-df', '--file', type=str, metavar='', required=True, help='Depth summary file')
args = parser.parse_args()
Depth_Summary_file = args.file
file_name = Depth_Summary_file + "_Corrected_Stats.txt"

final_result = np.array([["#scaffoldID", 1, 1]])
line_split = np.array([["#scaffoldID", 1, 1]])

with open(Depth_Summary_file) as d_s_f:
    for row in progressbar.progressbar(d_s_f):
        if row == "\n" or row[0] == "#":
            #print("\nPointer line 26")
            pass
        else:
            #print(row)
            line_split = np.array([str(row).split(sep="\t")])
            #print(line_split)
            line_split[0, 2] = str(line_split[0, 2]).split(sep="\n")[0]
            #print(line_split)

            if str(line_split[0, 0]) in final_result[:, 0]:
                final_result[np.where(final_result[:, 0] == line_split[0, 0])[0].tolist(), 0] = line_split[0, 0]
                final_result[np.where(final_result[:, 0] == line_split[0, 0])[0].tolist(), 1] = \
                    int(final_result[np.where(final_result[:, 0] == line_split[0, 0])[0].tolist(), 1]) + \
                    int(line_split[0, 1])
                final_result[np.where(final_result[:, 0] == line_split[0, 0])[0].tolist(), 2] = \
                    int(final_result[np.where(final_result[:, 0] == line_split[0, 0])[0].tolist(), 2]) + \
                    int(line_split[0, 2])

            else:
                final_result = np.vstack((final_result, line_split))

final_result[0, :] = ["#ScaffoldID", "TotalDepth", "Count"]
cwd = os.getcwd()
df = pd.DataFrame(final_result)
with open(str(file_name), 'w') as out_file:
    df.to_csv(out_file, sep="\t", header=False, index=False)
